<Window x:Class="FTWPlayer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        xmlns:converters="clr-namespace:FTWPlayer.Converters"
        xmlns:prop="clr-namespace:FTWPlayer.Properties"
        xmlns:fuwa="https://github.com/OronDF343/FuwaTeaWin"
        xmlns:ignore="http://www.ignore.com"
        xmlns:hc="http://www.hardcodet.net/taskbar"
        xmlns:ftwPlayer="clr-namespace:FTWPlayer"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d ignore"
        x:Name="WindowElement"
        Title="FTW Player"
        MinHeight="{DynamicResource MinHeight}"
        MaxHeight="{DynamicResource MaxHeight}"
        MinWidth="{DynamicResource MinWidth}"
        MaxWidth="{DynamicResource MaxWidth}"
        SourceInitialized="MainWindow_OnSourceInitialized"
        DataContext="{Binding Main, Source={StaticResource Locator}}"
        WindowStyle="None" AllowsTransparency="True" ResizeMode="CanResize" Background="Transparent"
        AllowDrop="True" FlowDirection="LeftToRight"
        ShowInTaskbar="{fuwa:Cfg ShowInTaskbar}"
        Topmost="{fuwa:Cfg Topmost}"
        lex:LocalizeDictionary.DesignCulture="he"
        lex:ResxLocalizationProvider.DefaultAssembly="FTWPlayer"
        lex:ResxLocalizationProvider.DefaultDictionary="Strings"
        fuwa:ConfigSource.Repository="{x:Static prop:Settings.Default}"
        ftwPlayer:WindowSizeParameters.CompactHeight="{DynamicResource CompactHeight}"
        ftwPlayer:WindowSizeParameters.BottomHeight="{DynamicResource BottomHeight}">
    <!-- FFR: These property values enable hardware acceleration (because they make this a layered window):
         WindowStyle = None
         AllowsTransparency = True
         Background = Transparent -->
    <WindowChrome.WindowChrome>
        <WindowChrome CornerRadius="0" ResizeBorderThickness="{Binding Expanded, Converter={StaticResource ResizeConv}}" GlassFrameThickness="0" UseAeroCaptionButtons="False" CaptionHeight="0"/>
    </WindowChrome.WindowChrome>
    <Window.Height>
        <fuwa:CfgBinding Repository="{x:Static prop:Settings.Default}">DesiredMaxHeight</fuwa:CfgBinding>
    </Window.Height>
    <Window.Width>
        <fuwa:CfgBinding Repository="{x:Static prop:Settings.Default}">DesiredWidth</fuwa:CfgBinding>
    </Window.Width>
    <ftwPlayer:WindowSizeParameters.TotalCompactHeight>
        <MultiBinding Converter="{StaticResource AddConv}">
            <Binding ElementName="MainBorder" Path="BorderThickness.Top"/>
            <Binding ElementName="MainBorder" Path="BorderThickness.Bottom"/>
            <Binding ElementName="WindowElement" Path="(ftwPlayer:WindowSizeParameters.CompactHeight)"/>
        </MultiBinding>
    </ftwPlayer:WindowSizeParameters.TotalCompactHeight>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="KeyDown">
            <command:EventToCommand Command="{Binding KeyDownCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyUp">
            <command:EventToCommand Command="{Binding KeyUpCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="DragEnter">
            <command:EventToCommand Command="{Binding DragEnterCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Drop">
            <command:EventToCommand Command="{Binding DropCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <i:Interaction.Behaviors>
        <fuwa:ExtendedCloseBehavior Storyboard="{DynamicResource ClosingAnimation}"
                                    VolumeFadeOutStoryboard="{StaticResource VolumeFadeOut}"
                                    VolumeFadeOut="{fuwa:CfgBinding VolumeFadeOutOnExit, Repository={x:Static prop:Settings.Default}}" />
        <fuwa:OpenBehavior Storyboard="{DynamicResource LoadedAnimation}" />
        <fuwa:WindowDragBehavior Enabled="{Binding AllowDrag}">
            <fuwa:ElementReference Binding="{Binding ElementName=TabControl, Path=SelectedContent}"/>
            <fuwa:ElementReference Binding="{Binding ElementName=VolumeSlider}"/>
        </fuwa:WindowDragBehavior>
        <fuwa:SkinLoadingBehavior>Layer0;MainWindowStyle</fuwa:SkinLoadingBehavior>
    </i:Interaction.Behaviors>
    <Window.Resources>
        <converters:TimeSpanDifferenceToGridLengthMultiConverter x:Key="TsGlConv" />
        <converters:BooleanToZIndexConverter x:Key="BZiConv" />
        <converters:PositionTimeSpanStringMultiConverter x:Key="PosTsStrConv" />
        <BooleanToVisibilityConverter x:Key="BoolVisConv" />
        <converters:DoubleSubtractMultiConverter x:Key="SubConv" />
        <converters:TimeSpanFormatterConverter x:Key="TsFmtConv" />
        <converters:StringFormatterMultiConverter x:Key="StrFmtConv" />
        <converters:VolumeConverter x:Key="VolConv" />
        <converters:ScaleMultiConverter x:Key="ScaleConv" />
        <converters:TagFormatterMultiConverter x:Key="TagFmtConv"/>
    </Window.Resources>

    <!-- Fake Background & Border -->
    <Canvas>
        <Border x:Name="MainBorder" fuwa:DynamicStyle.BaseStyle="{DynamicResource WindowBorderStyle}" Width="{Binding ElementName=WindowElement, Path=Width}" Canvas.Bottom="0">
            <Border.Height>
                <MultiBinding Converter="{StaticResource ScaleConv}">
                    <Binding ElementName="WindowElement" Path="(ftwPlayer:WindowSizeParameters.TotalCompactHeight)"/>
                    <Binding ElementName="WindowElement" Path="Height"/>
                    <Binding ElementName="MainBorder" Path="Tag"/>
                </MultiBinding>
            </Border.Height>
            <fuwa:DynamicStyle.DerivedStyle>
                <Style TargetType="Border">
                    <Setter Property="Tag">
                        <Setter.Value>
                            <system:Double>0.0</system:Double>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Expanded}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Tag" To="1.0" Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Tag" To="0.0" Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </fuwa:DynamicStyle.DerivedStyle>
            <Grid x:Name="MainGrid" ClipToBounds="True">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition MinHeight="{DynamicResource CompactHeight}" MaxHeight="{DynamicResource BottomHeight}" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition MinHeight="{DynamicResource CompactHeight}" MaxHeight="{DynamicResource CompactHeight}"/>
                    </Grid.RowDefinitions>

                    <!-- Ugly implementation, but it does the job. -->
                    <Canvas Grid.Row="1" ClipToBounds="True" Margin="1,0" fuwa:FlowDirectionUpdater.AutoUpdateMode="Enabled">
                        <fuwa:ScrollingTextBlockComponent FontSize="15"
                                                          Foreground="{DynamicResource TextBrush}"
                                                          Background="Transparent"
                                                          TextAlignment="Center"
                                                          VerticalAlignment="Top"
                                                          DelayModifier="0.005"
                                                          TargetWidth="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Canvas}, Path=ActualWidth}"
                                                          Spacing="16">
                            <fuwa:ScrollingTextBlockComponent.ScrollingText>
                                <MultiBinding Converter="{StaticResource TagFmtConv}" ConverterParameter="{lex:Loc WelcomeText}">
                                    <Binding Path="PlaybackManager.Current" />
                                    <Binding Path="ScrollingTextFormatString" />
                                </MultiBinding>
                            </fuwa:ScrollingTextBlockComponent.ScrollingText>
                        </fuwa:ScrollingTextBlockComponent>
                    </Canvas>

                    <TextBlock Grid.Row="1"
                               Grid.Column="0"
                               FontSize="10"
                               Foreground="{DynamicResource TextBrush}"
                               Focusable="False"
                               VerticalAlignment="Bottom"
                               TextAlignment="Center"
                               HorizontalAlignment="Center"
                               Padding="1,0">
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource StrFmtConv}">
                                <Binding Path="PositionTextFormatString" />
                                <Binding Path="OneBasedCurrentIndex" />
                                <Binding Path="OneBasedCurrentIndexAbsolute" />
                                <Binding Path="PlaybackManager.ElementCount" />
                                <Binding Path="PlaybackManager.Position" Converter="{StaticResource TsFmtConv}" />
                                <Binding Path="PlaybackManager.Duration" Converter="{StaticResource TsFmtConv}" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    <Button Grid.Row="1" Grid.Column="1" Content="{DynamicResource PreviousButtonContent}"
                            fuwa:OptionalToolTip.ToolTipEnabled="{fuwa:Cfg ShowToolTips}"
                            fuwa:OptionalToolTip.ToolTipContent="{lex:Loc PreviousToolTip}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <command:EventToCommand Command="{Binding PreviousCommand}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Grid.Row="1" Grid.Column="2" fuwa:DynamicStyle.BaseStyle="{DynamicResource {x:Type Button}}"
                            fuwa:OptionalToolTip.ToolTipEnabled="{fuwa:Cfg ShowToolTips}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <command:EventToCommand Command="{Binding PlayPauseResumeCommand}"
                                                        PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <fuwa:DynamicStyle.DerivedStyle>
                            <Style TargetType="Button">
                                <Setter Property="Content" Value="{DynamicResource PlayButtonContent}" />
                                <Setter Property="fuwa:OptionalToolTip.ToolTipContent" Value="{lex:Loc PlayToolTip}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding PlaybackManager.CurrentState}" Value="Playing">
                                        <Setter Property="Content" Value="{DynamicResource PauseButtonContent}" />
                                        <Setter Property="fuwa:OptionalToolTip.ToolTipContent"
                                                Value="{lex:Loc PauseToolTip}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding PlaybackManager.CurrentState}" Value="Paused">
                                        <Setter Property="fuwa:OptionalToolTip.ToolTipContent"
                                                Value="{lex:Loc ResumeToolTip}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </fuwa:DynamicStyle.DerivedStyle>
                    </Button>
                    <Button Grid.Row="1" Grid.Column="3" Content="{DynamicResource NextButtonContent}"
                            fuwa:OptionalToolTip.ToolTipEnabled="{fuwa:Cfg ShowToolTips}"
                            fuwa:OptionalToolTip.ToolTipContent="{lex:Loc NextToolTip}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <command:EventToCommand Command="{Binding NextCommand}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Grid.Row="1" Grid.Column="4" Content="{DynamicResource StopButtonContent}"
                            fuwa:OptionalToolTip.ToolTipEnabled="{fuwa:Cfg ShowToolTips}"
                            fuwa:OptionalToolTip.ToolTipContent="{lex:Loc StopToolTip}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <command:EventToCommand Command="{Binding StopCommand}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button x:Name="VolumeButton" Grid.Row="1" Grid.Column="5"
                            fuwa:OptionalToolTip.ToolTipEnabled="{fuwa:Cfg ShowToolTips}"
                            fuwa:OptionalToolTip.ToolTipContent="{lex:Loc VolumeToolTip}"
                            fuwa:DataStatesHelper.Binding="{Binding Volume, Converter={StaticResource VolConv}}"
                            fuwa:DataStatesHelper.States="{StaticResource VolumeStates}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <command:EventToCommand Command="{Binding MuteCommand}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseRightButtonDown">
                                <i:InvokeCommandAction Command="{Binding VolumeClickCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave">
                                <i:InvokeCommandAction Command="{Binding VolumeMouseLeaveCommand}"
                                                       CommandParameter="{Binding ElementName=VolumeSlider}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Slider x:Name="VolumeSlider" Grid.Row="1" Grid.Column="6" Orientation="Horizontal"
                            AutoToolTipPlacement="TopLeft"
                            Value="{Binding Volume, Converter={StaticResource VolConv}}"
                            Minimum="0" Maximum="100" Interval="1" LargeChange="10" SmallChange="5"
                            IsSnapToTickEnabled="True" TickFrequency="1"
                            Width="0" VerticalAlignment="Center"
                            fuwa:DataStatesHelper.Binding="{Binding ShowVolumeSlider}"
                            fuwa:DataStatesHelper.States="{StaticResource VolumeSliderStates}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeave">
                                <i:InvokeCommandAction Command="{Binding VolumeMouseLeaveCommand}"
                                                       CommandParameter="{Binding ElementName=VolumeButton}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Slider>
                    <Button Grid.Row="1" Grid.Column="7"
                            fuwa:OptionalToolTip.ToolTipEnabled="{fuwa:Cfg ShowToolTips}"
                            fuwa:OptionalToolTip.UseDataStates="True"
                            fuwa:DataStatesHelper.Binding="{Binding PlaybackManager.EnableShuffle}"
                            fuwa:DataStatesHelper.States="{StaticResource ShuffleStates}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <command:EventToCommand Command="{Binding ShuffleCommand}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Grid.Row="1" Grid.Column="8"
                            fuwa:OptionalToolTip.ToolTipEnabled="{fuwa:Cfg ShowToolTips}"
                            fuwa:OptionalToolTip.UseDataStates="True"
                            fuwa:DataStatesHelper.Binding="{Binding PlaybackManager.LoopType}"
                            fuwa:DataStatesHelper.States="{StaticResource RepeatStates}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <command:EventToCommand Command="{Binding RepeatCommand}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Grid.Row="1" Grid.Column="9"
                            fuwa:OptionalToolTip.ToolTipEnabled="{fuwa:Cfg ShowToolTips}"
                            fuwa:OptionalToolTip.UseDataStates="True"
                            fuwa:DataStatesHelper.Binding="{Binding Expanded}"
                            fuwa:DataStatesHelper.States="{StaticResource WindowStates}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <command:EventToCommand Command="{Binding ExpandCommand}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Grid.Row="1" Grid.Column="10" Content="{DynamicResource MinimizeButtonContent}"
                            Click="MinimizeButton_OnClick"
                            fuwa:OptionalToolTip.ToolTipEnabled="{fuwa:Cfg ShowToolTips}"
                            fuwa:OptionalToolTip.ToolTipContent="{lex:Loc HideToolTip}" />
                    <Button Grid.Row="1" Grid.Column="11" Content="{DynamicResource CloseButtonContent}"
                            Click="CloseButton_OnClick"
                            fuwa:OptionalToolTip.ToolTipEnabled="{fuwa:Cfg ShowToolTips}"
                            fuwa:OptionalToolTip.ToolTipContent="{lex:Loc ExitToolTip}" />

                    <!-- Progress Bar -->
                    <!-- ReSharper disable once Xaml.MissingGridIndex -->
                    <Grid Grid.Column="0" Grid.ColumnSpan="12"
                          Panel.ZIndex="{Binding ShiftMode, Converter={StaticResource BZiConv}}"
                          fuwa:CopyToToolTipTag.Enabled="True">
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Row" Value="1" />
                                <Setter Property="Height" Value="{DynamicResource CompactHeight}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Expanded}" Value="True">
                                        <Setter Property="Grid.Row" Value="0" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseMove">
                                <command:EventToCommand Command="{Binding ToolTipUpdateCommand}"
                                                        PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding SeekCommand}"
                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseEnter">
                                <command:EventToCommand Command="{Binding MouseEnterSeekAreaCommand}"
                                                        PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave">
                                <command:EventToCommand Command="{Binding MouseLeaveSeekAreaCommand}"
                                                        PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid.ToolTip>
                            <ToolTip Placement="Absolute" HorizontalOffset="{Binding MouseX}"
                                     Visibility="{Binding ShiftMode, Converter={StaticResource BoolVisConv}}">
                                <ToolTip.VerticalOffset>
                                    <MultiBinding Converter="{StaticResource SubConv}">
                                        <Binding Path="MouseY" />
                                        <Binding RelativeSource="{RelativeSource Self}" Path="ActualHeight" />
                                    </MultiBinding>
                                </ToolTip.VerticalOffset>
                                <MultiBinding Converter="{StaticResource PosTsStrConv}">
                                    <Binding RelativeSource="{RelativeSource Self}" Path="Tag" />
                                    <Binding Path="PlaybackManager.Duration" />
                                    <!-- This value has no use. It only makes sure it updates every time we move the mouse horizontally. -->
                                    <Binding RelativeSource="{RelativeSource Self}" Path="HorizontalOffset" />
                                </MultiBinding>
                            </ToolTip>
                        </Grid.ToolTip>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition>
                                <ColumnDefinition.Width>
                                    <MultiBinding Converter="{StaticResource TsGlConv}">
                                        <Binding Path="PlaybackManager.Position" />
                                        <Binding Path="PlaybackManager.Duration" />
                                    </MultiBinding>
                                </ColumnDefinition.Width>
                            </ColumnDefinition>
                            <ColumnDefinition>
                                <ColumnDefinition.Width>
                                    <MultiBinding Converter="{StaticResource TsGlConv}" ConverterParameter="Inverse">
                                        <Binding Path="PlaybackManager.Position" />
                                        <Binding Path="PlaybackManager.Duration" />
                                    </MultiBinding>
                                </ColumnDefinition.Width>
                            </ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.Column="0" Fill="{DynamicResource OverlayBrush}" HorizontalAlignment="Stretch" />
                        <Rectangle Grid.Column="1" Fill="{DynamicResource DefaultBrush}" HorizontalAlignment="Stretch" />
                    </Grid>
                </Grid>
                <!-- Expanded part -->
                <TabControl x:Name="TabControl" ItemsSource="{Binding Tabs}" Grid.Row="0"
                            fuwa:FlowDirectionUpdater.AutoUpdateMode="Enabled">
                    <TabControl.MinHeight>
                        <MultiBinding Converter="{StaticResource SubConv}">
                            <Binding ElementName="WindowElement" Path="Height"/>
                            <Binding ElementName="WindowElement" Path="(ftwPlayer:WindowSizeParameters.BottomHeight)"/>
                            <Binding ElementName="MainBorder" Path="BorderThickness.Bottom"/>
                            <Binding ElementName="MainBorder" Path="BorderThickness.Top"/>
                        </MultiBinding>
                    </TabControl.MinHeight>
                    <i:Interaction.Behaviors>
                        <fuwa:SkinLoadingBehavior>Layer1;MainTabControlStyle</fuwa:SkinLoadingBehavior>
                    </i:Interaction.Behaviors>
                </TabControl>
            </Grid>
        </Border>
        <hc:TaskbarIcon ToolTip="FTW Player" TrayMouseDoubleClick="MaximizeButton_OnClick">
            <hc:TaskbarIcon.ContextMenu>
                <ContextMenu fuwa:FlowDirectionUpdater.AutoUpdateMode="Enabled">
                    <MenuItem Header="{lex:BLoc PreviousToolTip}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <command:EventToCommand Command="{Binding PreviousCommand}"
                                                        PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <command:EventToCommand Command="{Binding PlayPauseResumeCommand}"
                                                        PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <MenuItem.Style>
                            <Style TargetType="MenuItem">
                                <Setter Property="Header" Value="{lex:BLoc PlayToolTip}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding PlaybackManager.CurrentState}" Value="Playing">
                                        <Setter Property="Header" Value="{lex:BLoc PauseToolTip}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding PlaybackManager.CurrentState}" Value="Paused">
                                        <Setter Property="Header" Value="{lex:BLoc ResumeToolTip}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem Header="{lex:BLoc NextToolTip}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <command:EventToCommand Command="{Binding NextCommand}"
                                                        PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="{lex:BLoc StopToolTip}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <command:EventToCommand Command="{Binding StopCommand}"
                                                        PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="{lex:BLoc ShowToolTip}" Click="MaximizeButton_OnClick" FontWeight="Bold"/>
                    <MenuItem Header="{lex:BLoc ExitToolTip}" Click="CloseButton_OnClick"/>
                </ContextMenu>
            </hc:TaskbarIcon.ContextMenu>
        </hc:TaskbarIcon>
        <!-- Insert modal messages here -->
    </Canvas>
</Window>