<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:skins="clr-namespace:FTWPlayer.Skins">
    <skins:ResourceDictionaryIdentifier x:Key="SkinIdentifier"
                                        Id="Default"
                                        Name="Default Icons"
                                        Description="This is the default icon set for FuwaTeaWin. Use color themes to make it more colorfull!"
                                        Version="1.0"
                                        Author="Styling by OronDF343; Icons by iconmonstr"
                                        Homepage="https://orondf343.wordpress.com/"
                                        SkinType="Base" />

    <!-- EXPLANATION for the USEFUL notations:
         REQUIRED means the resources are linked to directly by the program, so it must be created.
         OPTIONAL means the resources are ALWAYS loaded, but ONLY if it is present. These are styles and templates with no x:Key attribute.
         EXTERNAL means the resources are required by another one in this file, but it CAN be modified in a different file.
         INTERNAL means the resources are required by another one in this file, but SHOULDN'T be modified by another file in most cases.
         PRIVATE means the resources are required by another one in this file, but CANNOT (or REALLY SHOULDN'T) be modified by another file.
         The resources should be listed in the REVERSE of this order, or from the least significant resource to the most significant resource, since a resource can only reference one above it.
         USAGE specifies what functionality this resource provides. (what it does)-->

    <!-- PRIVATE: Scaling stuff
         USAGE: Scales the 512x512 icons down to the desired sizes. -->
    <ScaleTransform x:Key="512To32Transform" ScaleX="0.0625" ScaleY="0.0625" />
    <ScaleTransform x:Key="512To30Transform" ScaleX="0.0585" ScaleY="0.0585" CenterX="1" CenterY="1" />
    <ScaleTransform x:Key="512To16Transform" ScaleX="0.03125" ScaleY="0.03125" />

    <!-- INTERNAL: Path Geometry (the actual icons)
         USAGE: Contains the vector gaphics which are used to draw the icons. The ScaleTransform should be used here. Must be assignable to Path.Data. For using other formats of graphics, please modify the Content stuff. -->
    <PathGeometry x:Key="PreviousIcon"
                  Figures="M94.786,369.982V256V142.019H50v227.964H94.786z M278.492,382.991L94.786,256.001l183.706-126.992V382.991z M462,382.991l-183.706-126.99L462,129.009V382.991z"
                  FillRule="NonZero"
                  Transform="{StaticResource 512To32Transform}" />
    <PathGeometry x:Key="PlayIcon"
                  Figures="M88.008,462V50l335.984,206.002L88.008,462z"
                  FillRule="NonZero"
                  Transform="{StaticResource 512To30Transform}" />
    <PathGeometry x:Key="PauseIcon"
                  Figures="M217.679,462h-120V50h120V462z M414.321,50h-120v412h120V50z"
                  FillRule="NonZero"
                  Transform="{StaticResource 512To30Transform}" />
    <PathGeometry x:Key="NextIcon"
                  Figures="M462,369.982V142.019h-44.786V256v113.982H462z M233.508,129.009l183.706,126.992l-183.706,126.99V129.009z  M50,129.009l183.706,126.992L50,382.991V129.009z"
                  FillRule="NonZero"
                  Transform="{StaticResource 512To32Transform}" />
    <PathGeometry x:Key="VolumeIcon"
                  Figures="M135.704,333.428H77.983C62.529,333.428,50,320.898,50,305.443v-98.886
	                       c0-15.455,12.529-27.984,27.983-27.984h57.721V333.428z M167.154,171.633v168.736l135.238,77.863V93.768L167.154,171.633z
	                       M339.991,196.806c15.102,15.134,24.425,36.036,24.385,59.11c-0.026,23.066-9.407,43.943-24.544,59.041l24.828,24.914
	                       c21.512-21.453,34.856-51.133,34.902-83.915c0.049-32.788-13.195-62.474-34.646-83.984L339.991,196.806z M383.61,153.345
	                       c26.229,26.295,42.393,62.565,42.331,102.636c-0.054,40.068-16.371,76.35-42.666,102.58l25.443,25.545
	                       c32.829-32.752,53.212-78.061,53.281-128.091c0.077-50.026-20.1-95.293-52.839-128.119L383.61,153.345z"
                  FillRule="NonZero"
                  Transform="{StaticResource 512To32Transform}" />
    <PathGeometry x:Key="MuteIcon"
                  Figures="M132.158,333.387h-57.69c-15.446,0-27.968-12.521-27.968-27.969v-98.835
	                       c0-15.448,12.521-27.97,27.968-27.97h57.69V333.387z M163.593,171.676v168.648l135.169,77.824V93.852L163.593,171.676z
	                       M465.5,298.845l-42.859-42.854l42.854-42.856l-23.042-23.027l-42.847,42.853l-42.854-42.848l-23.037,23.023l42.86,42.858
	                       l-42.855,42.861l23.023,23.037l42.865-42.867l42.864,42.862L465.5,298.845z"
                  FillRule="NonZero"
                  Transform="{StaticResource 512To32Transform}" />
    <PathGeometry x:Key="ShuffleIcon"
                  Figures="M102.319,187.959H50v-40h52.319c38.263,0,75.373,15.736,102.147,44.485
	                       c-1.163,1.716-22.359,35.536-22.359,35.536C163.371,202.782,134.117,187.959,102.319,187.959z M462,342.987l-88.489-55.225v36.195
	                       h-28.664c-31.797,0-61.052-14.823-79.788-40.021c0,0-21.196,33.82-22.358,35.536c26.8,28.776,63.928,44.484,102.146,44.484h28.768
	                       l0.086,33.082L462,342.987z M462,169.013l-88.3-54.053l-0.086,33.082h-28.768c-47.448,0-92.504,24.248-118.344,65.592l-39.76,63.616
	                       c-18.312,29.299-49.872,46.791-84.424,46.791H50v40h52.319c47.448,0,92.504-24.248,118.344-65.592l39.76-63.616
	                       c18.312-29.299,49.872-46.791,84.424-46.791h28.664l-0.095,36.195L462,169.013z"
                  FillRule="NonZero"
                  Transform="{StaticResource 512To32Transform}" />
    <PathGeometry x:Key="RepeatIcon"
                  Figures="M322.697,248.393v-44.592H142.5c-28.948,0-52.5,23.551-52.5,52.5c0,10.296,2.991,19.901,8.133,28.016
	                       l-34.131,20.927C55.132,291.046,50,274.274,50,256.301c0-51.086,41.413-92.5,92.5-92.5h180.197v-45.387l105.996,64.989
	                       L322.697,248.393z M447.727,206.924l-34.137,20.93c5.312,8.204,8.41,17.968,8.41,28.447c0,28.949-23.552,52.5-52.5,52.5H189.303
	                       v-45.193L83.307,328.597l105.996,64.989v-44.785H369.5c51.087,0,92.5-41.414,92.5-92.5C462,238.144,456.765,221.212,447.727,206.924z"
                  FillRule="NonZero"
                  Transform="{StaticResource 512To32Transform}" />
    <PathGeometry x:Key="SingleRepeatIcon"
                  Figures="M155.836,342.356H142.5c-51.087,0-92.5-41.414-92.5-92.5s41.413-92.5,92.5-92.5h41.091V111.97
	                       l105.996,64.99l-105.996,64.988v-44.592H142.5c-28.948,0-52.5,23.551-52.5,52.5s23.552,52.5,52.5,52.5h13.506
	                       C153.48,315.495,153.408,329.097,155.836,342.356z M369.5,157.356h-49.584v40H369.5c28.948,0,52.5,23.551,52.5,52.5
	                       s-23.552,52.5-52.5,52.5h-2.95c2.528,13.152,2.596,26.76,0.169,40h2.781c51.087,0,92.5-41.414,92.5-92.5
	                       S420.587,157.356,369.5,157.356z M338.493,322.813c0,42.646-34.569,77.217-77.216,77.217c-42.645,0-77.215-34.57-77.215-77.217
	                       c0-42.645,34.57-77.215,77.215-77.215C303.924,245.599,338.493,280.169,338.493,322.813z M277.632,285.579h-17.309l-23.954,11.076
	                       l3.461,15.785l17.169-8.17h0.277v62.311h20.354V285.579z"
                  FillRule="NonZero"
                  Transform="{StaticResource 512To32Transform}" />
    <PathGeometry x:Key="ResizeIcon"
                  Figures="M50,50v412h412V50H50z M412,412H304.472V207.528H100V100h312V412z"
                  FillRule="NonZero"
                  Transform="{StaticResource 512To30Transform}" />
    <PathGeometry x:Key="MinimizeIcon"
                  Figures="M245.055,438.5H50v-365h412v212.028h-50V170.5H100v218h145.055V438.5z M462,323.962H282.833v49.909H462V323.962z"
                  FillRule="NonZero"
                  Transform="{StaticResource 512To30Transform}" />
    <PathGeometry x:Key="ExitIcon"
                  Figures="M291,50h-70v184.001h70V50z M366.227,112.407c22.621,15.837,41.927,36.611,56.2,61.334
	                       c34.329,59.458,34.329,132.714,0,192.173C388.098,425.372,324.656,462,256,462c-68.657,0-132.099-36.628-166.427-96.086
	                       c-34.329-59.459-34.329-132.715,0-192.173c14.272-24.723,33.579-45.497,56.2-61.334l23.444,33.483
	                       c-17.81,12.468-33.009,28.824-44.247,48.287c-27.026,46.812-27.026,104.487,0,151.299c27.027,46.812,76.976,75.649,131.029,75.649
	                       s104.001-28.838,131.028-75.649c27.026-46.812,27.026-104.486,0-151.299c-11.237-19.463-26.438-35.819-44.247-48.287
	                       L366.227,112.407z"
                  FillRule="NonZero"
                  Transform="{StaticResource 512To30Transform}" />
    <PathGeometry x:Key="GearIcon"
                  Figures="M462,283.742v-55.485l-49.249-17.514c-3.4-11.792-8.095-23.032-13.919-33.563l22.448-47.227
	                       l-39.234-39.234l-47.226,22.449c-10.53-5.824-21.772-10.52-33.564-13.919L283.741,50h-55.484l-17.515,49.25
	                       c-11.792,3.398-23.032,8.094-33.563,13.918l-47.227-22.449l-39.234,39.234l22.45,47.227c-5.824,10.531-10.521,21.771-13.919,33.563
	                       L50,228.257v55.485l49.249,17.514c3.398,11.792,8.095,23.032,13.919,33.563l-22.45,47.227l39.234,39.234l47.227-22.449
	                       c10.531,5.824,21.771,10.52,33.563,13.92L228.257,462h55.484l17.515-49.249c11.792-3.398,23.034-8.095,33.564-13.919l47.226,22.448
	                       l39.234-39.234l-22.448-47.226c5.824-10.53,10.521-21.772,13.919-33.564L462,283.742z M256,331.546
	                       c-41.724,0-75.548-33.823-75.548-75.546s33.824-75.547,75.548-75.547c41.723,0,75.546,33.824,75.546,75.547
	                       S297.723,331.546,256,331.546z"
                  FillRule="Nonzero"
                  Transform="{StaticResource 512To32Transform}"/>
    <PathGeometry x:Key="SmallHelpIcon"
                  Figures="M259.462,462c-24.864,0-45.03-20.166-45.03-45.039c0-24.86,20.166-45.02,45.03-45.02
	                       c24.87,0,45.029,20.159,45.029,45.02C304.491,441.834,284.332,462,259.462,462z M294.865,328.9v8.1c0,0-67.513,0-74.229,0v-8.1
	                       c0-22.922,3.344-52.326,29.956-77.89c26.613-25.567,59.87-46.687,59.87-78.625c0-35.309-24.503-53.985-55.399-53.985
	                       c-51.483,0-54.846,53.393-56.115,65.149H126.75C128.673,127.874,152.206,50,255.494,50c89.513,0,129.756,59.949,129.756,116.166
	                       C385.25,255.646,294.865,271.189,294.865,328.9z"
                  FillRule="NonZero"
                  Transform="{StaticResource 512To16Transform}" />

    <!-- REQUIRED: The Content of the buttons.
         USAGE: Anything that will appear on each button. Must be assignable to Button.Content. -->
    <Path x:Key="PreviousButtonContent" Fill="{DynamicResource IconBrush}" Width="32" Height="32"
          Data="{DynamicResource PreviousIcon}" />
    <Path x:Key="PlayButtonContent" Fill="{DynamicResource IconBrush}" Width="32" Height="32"
          Data="{DynamicResource PlayIcon}" />
    <Path x:Key="PauseButtonContent" Fill="{DynamicResource IconBrush}" Width="32" Height="32"
          Data="{DynamicResource PauseIcon}" />
    <Path x:Key="NextButtonContent" Fill="{DynamicResource IconBrush}" Width="32" Height="32"
          Data="{DynamicResource NextIcon}" />
    <Canvas x:Key="StopButtonContent" Width="32" Height="32" RenderTransform="{StaticResource 512To30Transform}">
        <Rectangle Canvas.Left="82" Canvas.Top="71" Width="348" Height="370" Fill="{DynamicResource IconBrush}" />
    </Canvas>
    <Path x:Key="VolumeButtonContent" Fill="{DynamicResource IconBrush}" Width="32" Height="32"
          Data="{DynamicResource VolumeIcon}" />
    <Path x:Key="VolumeButtonMutedContent" Fill="{DynamicResource InactiveIconBrush}" Width="32" Height="32"
          Data="{DynamicResource MuteIcon}" />
    <Path x:Key="ShuffleButtonContent" Fill="{DynamicResource IconBrush}" Width="32" Height="32"
          Data="{DynamicResource ShuffleIcon}" />
    <Path x:Key="InactiveShuffleButtonContent" Fill="{DynamicResource InactiveIconBrush}" Width="32" Height="32"
          Data="{DynamicResource ShuffleIcon}" />
    <Path x:Key="RepeatButtonContent" Fill="{DynamicResource IconBrush}" Width="32" Height="32"
          Data="{DynamicResource RepeatIcon}" />
    <Path x:Key="InactiveRepeatButtonContent" Fill="{DynamicResource InactiveIconBrush}" Width="32" Height="32"
          Data="{DynamicResource RepeatIcon}" />
    <Path x:Key="SingleRepeatButtonContent" Fill="{DynamicResource IconBrush}" Width="32" Height="32"
          Data="{DynamicResource SingleRepeatIcon}" />
    <Path x:Key="ResizeDownButtonContent" Fill="{DynamicResource IconBrush}" Width="32" Height="32"
          Data="{DynamicResource ResizeIcon}" />
    <Path x:Key="ResizeUpButtonContent" Fill="{DynamicResource InactiveIconBrush}" Width="32" Height="32"
          Data="{DynamicResource ResizeIcon}" />
    <Path x:Key="MinimizeButtonContent" Fill="{DynamicResource IconBrush}" Width="32" Height="32"
          Data="{DynamicResource MinimizeIcon}" />
    <Path x:Key="CloseButtonContent" Fill="{DynamicResource IconBrush}" Width="32" Height="32"
          Data="{DynamicResource ExitIcon}" />
    <Path x:Key="AllSettingsButtonContent" Fill="{DynamicResource BackgroundBrush}" Width="32" Height="32"
          Data="{DynamicResource GearIcon}" />
    <Path x:Key="MiniHelpButtonContent" Fill="{DynamicResource IconBrush}" Width="32" Height="32"
          Data="{DynamicResource SmallHelpIcon}" />
    <Path x:Key="Example2Content" Fill="{DynamicResource BackgroundBrush}" Width="32" Height="32"
          Data="{DynamicResource ResizeIcon}" />

    <!-- EXTERNAL: Dimensions -->
    <Thickness x:Key="BorderThickness">1</Thickness>

    <!-- EXTERNAL: Brushes -->
    <!-- * MainWindowStyle: -->
    <SolidColorBrush x:Key="BorderBrush" Color="Black" />
    <SolidColorBrush x:Key="BackgroundBrush" Color="#FF303030" />
    <SolidColorBrush x:Key="ProgressBrush" Color="#FF505050" />
    <!-- * MainTabControlStyle: -->
    <SolidColorBrush x:Key="MainBackgroundBrush" Color="#FF606060" />
    <!-- * Text Brush: -->
    <SolidColorBrush x:Key="TextBrush" Color="White" />
    <!-- * Icon Brushes: -->
    <SolidColorBrush x:Key="IconBrush" Color="White" />
    <SolidColorBrush x:Key="InactiveIconBrush" Color="#7FFFFFFF" />
    <!-- * UI element Colors/Brushes: -->
    <Color x:Key="DefaultColor">Transparent</Color>
    <Color x:Key="HighlightColor">#7f7f7f7f</Color>
    <Color x:Key="PressedColor">#aaaaaaaa</Color>
    <Color x:Key="DisabledColor">#40cccccc</Color>
    <Color x:Key="ElementColor">White</Color>
    <Color x:Key="ElementHighlightColor">#ffcccccc</Color>
    <Color x:Key="ElementPressedColor">#ffaaaaaa</Color>
    <Color x:Key="ElementDarkColor2">#7FFFFFFF</Color>
    <SolidColorBrush x:Key="DefaultBrush" Color="{DynamicResource DefaultColor}" />
    <SolidColorBrush x:Key="HighlightBrush" Color="{DynamicResource HighlightColor}" />
    <SolidColorBrush x:Key="PressedBrush" Color="{DynamicResource PressedColor}" />
    <SolidColorBrush x:Key="ElementBrush" Color="{DynamicResource ElementColor}" />
    <SolidColorBrush x:Key="ElementHighlightBrush" Color="{DynamicResource ElementHighlightColor}" />
    <SolidColorBrush x:Key="ElementPressedBrush" Color="{DynamicResource ElementPressedColor}" />

    <!-- OPTIONAL: Styles/Templates -->
    <!-- Flat Button Style -->
    <Style BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource DefaultBrush}" />
        <Setter Property="Focusable" Value="False" /> <!-- Important! -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource HighlightBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource PressedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Flat TabItems -->
    <ControlTemplate x:Key="TabItemTemplate" TargetType="{x:Type TabItem}">
        <Border BorderThickness="0" Padding="4" Height="32">
            <Border BorderThickness="0" Padding="4" Cursor="Hand" x:Name="tab"
                    Background="{DynamicResource DefaultBrush}" VerticalAlignment="Center">
                <Grid>
                    <ContentPresenter x:Name="contentPresenter" ContentSource="Header"
                                      TextBlock.Foreground="{DynamicResource TextBrush}"
                                      TextBlock.FontWeight="Bold"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left" />
                </Grid>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="tab" Property="Background" Value="{DynamicResource HighlightBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="tab" Property="Background" Value="{DynamicResource PressedBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Flat TabControl -->
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{DynamicResource DefaultBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource {x:Type TabItem}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel" IsItemsHost="true" Margin="0" Grid.Row="0"
                                  KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
                        <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{DynamicResource MainBackgroundBrush}"
                                KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1"
                                KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template" Value="{StaticResource TabItemTemplate}" />
    </Style>

    <!-- Flat Slider -->
    <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle StrokeThickness="1" Fill="{DynamicResource ElementBrush}"
                               Stroke="{DynamicResource DefaultBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Fill).Color">
                                            <DiscreteColorKeyFrame KeyTime="0"
                                                                   Value="{DynamicResource ElementHighlightColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Fill).Color">
                                            <DiscreteColorKeyFrame KeyTime="0"
                                                                   Value="{DynamicResource ElementPressedColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Fill).Color">
                                            <DiscreteColorKeyFrame KeyTime="0" Value="{DynamicResource DisabledColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyleDark" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle StrokeThickness="1" Fill="{DynamicResource BackgroundBrush}"
                               Stroke="{DynamicResource DefaultBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Fill).Color">
                                            <DiscreteColorKeyFrame KeyTime="0" Value="{DynamicResource HighlightColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Fill).Color">
                                            <DiscreteColorKeyFrame KeyTime="0" Value="{DynamicResource PressedColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Fill).Color">
                                            <DiscreteColorKeyFrame KeyTime="0"
                                                                   Value="{DynamicResource ElementDarkColor2}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Template when the orientation of the Slider is Horizontal.-->
    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TickBar x:Name="TopTick" SnapsToDevicePixels="True" Placement="Top" Height="4" Visibility="Collapsed"
                     Fill="{DynamicResource TextBrush}" />
            <Border x:Name="TrackBackground" Margin="0" Height="4" Grid.Row="1" BorderThickness="1"
                    BorderBrush="{DynamicResource DefaultBrush}" Background="{DynamicResource InactiveIconBrush}" />
            <Track Grid.Row="1" x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar x:Name="BottomTick" SnapsToDevicePixels="True" Grid.Row="2" Fill="{TemplateBinding Foreground}"
                     Placement="Bottom" Height="4" Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Template when the orientation of the Slider is Vertical.-->
    <ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TickBar x:Name="TopTick" SnapsToDevicePixels="True" Placement="Left" Width="4" Visibility="Collapsed"
                     Fill="{DynamicResource TextBrush}" />

            <Border x:Name="TrackBackground" Margin="0" Width="8" Grid.Column="1" BorderThickness="1"
                    BorderBrush="{DynamicResource DefaultBrush}" Background="{DynamicResource InactiveIconBrush}" />
            <Track Grid.Column="1" x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyleDark}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar x:Name="BottomTick" SnapsToDevicePixels="True" Grid.Column="2" Fill="{TemplateBinding Foreground}"
                     Placement="Right" Width="4" Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- REQUIRED: Animations -->
    <Storyboard x:Key="LoadedAnimation" x:Shared="False" TargetProperty="Opacity">
        <DoubleAnimation From="0" To="1" Duration="0:0:0.7" />
    </Storyboard>
    <Storyboard x:Key="ClosingAnimation" x:Shared="False" TargetProperty="Opacity">
        <DoubleAnimation From="1" To="0" Duration="0:0:0.7" />
    </Storyboard>

    <!-- REQUIRED: Styles -->
    <!-- Settings TabItems -->
    <ControlTemplate x:Key="SettingsTabItemTemplate" TargetType="{x:Type TabItem}">
        <Border BorderThickness="1" BorderBrush="{DynamicResource BackgroundBrush}" Margin="4" Padding="8"
                Cursor="Hand" x:Name="tab" Background="{DynamicResource DefaultBrush}" VerticalAlignment="Center"
                HorizontalAlignment="Stretch">
            <Grid>
                <ContentPresenter x:Name="contentPresenter" ContentSource="Header"
                                  TextBlock.Foreground="{DynamicResource BackgroundBrush}"
                                  TextBlock.FontWeight="Bold"
                                  VerticalAlignment="Top"
                                  HorizontalAlignment="Center" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="tab" Property="Background" Value="{DynamicResource ElementHighlightBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="tab" Property="Background" Value="{DynamicResource ElementPressedBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Settings TabControl -->
    <Style x:Key="SettingsTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{DynamicResource DefaultBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="TabStripPlacement" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TabPanel x:Name="HeaderPanel" IsItemsHost="true" Margin="0" Grid.Column="0"
                                  KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
                        <Border x:Name="ContentPanel" BorderBrush="{DynamicResource BackgroundBrush}"
                                BorderThickness="1" Background="{DynamicResource ElementPressedBrush}"
                                KeyboardNavigation.DirectionalNavigation="Contained" Grid.Column="1"
                                KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" Margin="4"
                                Padding="8">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SettingsTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Template" Value="{StaticResource SettingsTabItemTemplate}" />
    </Style>

    <Style x:Key="VolumeSliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="EqualizerSliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource VerticalSlider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource BorderThickness}" />
    </Style>
</ResourceDictionary>